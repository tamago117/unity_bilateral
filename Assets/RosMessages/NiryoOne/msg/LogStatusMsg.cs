//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.NiryoOne
{
    [Serializable]
    public class LogStatusMsg : Message
    {
        public const string k_RosMessageName = "niryo_one_msgs/LogStatus";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        //  in MB
        public int log_size;
        public int available_disk_size;
        public bool purge_log_on_startup;

        public LogStatusMsg()
        {
            this.header = new Std.HeaderMsg();
            this.log_size = 0;
            this.available_disk_size = 0;
            this.purge_log_on_startup = false;
        }

        public LogStatusMsg(Std.HeaderMsg header, int log_size, int available_disk_size, bool purge_log_on_startup)
        {
            this.header = header;
            this.log_size = log_size;
            this.available_disk_size = available_disk_size;
            this.purge_log_on_startup = purge_log_on_startup;
        }

        public static LogStatusMsg Deserialize(MessageDeserializer deserializer) => new LogStatusMsg(deserializer);

        private LogStatusMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.log_size);
            deserializer.Read(out this.available_disk_size);
            deserializer.Read(out this.purge_log_on_startup);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.log_size);
            serializer.Write(this.available_disk_size);
            serializer.Write(this.purge_log_on_startup);
        }

        public override string ToString()
        {
            return "LogStatusMsg: " +
            "\nheader: " + header.ToString() +
            "\nlog_size: " + log_size.ToString() +
            "\navailable_disk_size: " + available_disk_size.ToString() +
            "\npurge_log_on_startup: " + purge_log_on_startup.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
