//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.NiryoOne
{
    [Serializable]
    public class SendCustomDxlValueRequest : Message
    {
        public const string k_RosMessageName = "niryo_one_msgs/SendCustomDxlValue";
        public override string RosMessageName => k_RosMessageName;

        //  Check XL-320 and XL-430 reference doc for
        //  the complete register table
        public int motor_type;
        //  1 (XL-320) or 2 (XL-430)
        public byte id;
        public int value;
        public int reg_address;
        public int byte_number;

        public SendCustomDxlValueRequest()
        {
            this.motor_type = 0;
            this.id = 0;
            this.value = 0;
            this.reg_address = 0;
            this.byte_number = 0;
        }

        public SendCustomDxlValueRequest(int motor_type, byte id, int value, int reg_address, int byte_number)
        {
            this.motor_type = motor_type;
            this.id = id;
            this.value = value;
            this.reg_address = reg_address;
            this.byte_number = byte_number;
        }

        public static SendCustomDxlValueRequest Deserialize(MessageDeserializer deserializer) => new SendCustomDxlValueRequest(deserializer);

        private SendCustomDxlValueRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.motor_type);
            deserializer.Read(out this.id);
            deserializer.Read(out this.value);
            deserializer.Read(out this.reg_address);
            deserializer.Read(out this.byte_number);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.motor_type);
            serializer.Write(this.id);
            serializer.Write(this.value);
            serializer.Write(this.reg_address);
            serializer.Write(this.byte_number);
        }

        public override string ToString()
        {
            return "SendCustomDxlValueRequest: " +
            "\nmotor_type: " + motor_type.ToString() +
            "\nid: " + id.ToString() +
            "\nvalue: " + value.ToString() +
            "\nreg_address: " + reg_address.ToString() +
            "\nbyte_number: " + byte_number.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
